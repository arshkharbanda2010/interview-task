steps:
# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/interview-project-442915/python-hello-world:$SHORT_SHA', '.']

# Step 2: Push the Docker image to GCR
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/interview-project-442915/python-hello-world:$SHORT_SHA']

# Step 3: Update the Kubernetes manifest with the new image tag
- name: 'ubuntu'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    sed -i "s|image: gcr.io/interview-project-442915/python-hello-world:.*|image: gcr.io/interview-project-442915/python-hello-world:$SHORT_SHA|" k8/deployment.yaml

# Step 4: Commit the updated manifest back to GitHub
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  secretEnv: ['GITHUB_PAT']
  args:
  - '-c'
  - |
    git config --global user.email "arsh.kharbanda2010@gmail.com"
    git config --global user.name "arshkharbanda2010"
    git remote set-url origin https://$GITHUB_PAT@github.com/arshkharbanda2010/interview-task.git
    git add k8/deployment.yaml
    git commit -m "Update image tag to $SHORT_SHA"
    git push origin master
# master branch added

# Step 5 (Optional): Trigger ArgoCD sync via API
# - name: 'curlimages/curl'
#   entrypoint: 'bash'
#   secretEnv: ['ARGOCD_TOKEN']
#   args:
#   - '-c'
#   - |
#     curl -X POST -H "Authorization: Bearer $ARGOCD_TOKEN" \
#          -H "Content-Type: application/json" \
#          https://argocd-server-url/api/v1/applications/python-hello-world/sync

substitutions:
  _SHORT_SHA: $SHORT_SHA

timeout: 1200s
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
# secrets:
# - kmsKeyName: projects/interview-project-442915/locations/global/keyRings/<key-ring-name>/cryptoKeys/<key-name>
#   secretEnv:
#     ARGOCD_TOKEN: projects/interview-project-442915/secrets/ARGOCD_TOKEN/versions/latest
secrets:
- kmsKeyName: projects/interview-project-442915/locations/us-central1/keyRings/test-key/cryptoKeys/test-key
  secretEnv:
    GITHUB_PAT: projects/interview-project-442915/secrets/GITHUB_PAT/versions/latest