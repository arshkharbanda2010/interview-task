name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: interview-project-442915
  IMAGE_NAME: python-hello-world
  K8_MANIFEST_PATH: k8/deployment.yaml

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Authenticate with GCP
    - name: Set up Google Cloud authentication
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    # Step 3: Configure gcloud
    - name: Configure Google Cloud SDK
      run: |
        gcloud config set project $PROJECT_ID
        gcloud auth configure-docker

    # Step 4: Build and push Docker image to GCR
    - name: Build and push Docker image
      run: |
        IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
        docker build -t gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG .
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG
      env:
        IMAGE_TAG: ${{ github.sha }}

    # Step 5: Update Kubernetes manifest
    - name: Update Kubernetes manifest with new image tag
      run: |
        IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
        sed -i "s|image: gcr.io/$PROJECT_ID/$IMAGE_NAME:.*|image: gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG|" $K8_MANIFEST_PATH
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git add $K8_MANIFEST_PATH
        git commit -m "Update image tag to $IMAGE_TAG"
        git push origin main
      env:
        IMAGE_TAG: ${{ github.sha }}

    # Step 6 (Optional): Trigger ArgoCD sync
    # - name: Trigger ArgoCD sync
    #   if: ${{ secrets.ARGOCD_TOKEN }}
    #   run: |
    #     curl -X POST -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
    #          -H "Content-Type: application/json" \
    #          https://argocd-server-url/api/v1/applications/python-hello-world/sync
